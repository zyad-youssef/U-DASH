{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\zyadi\\\\OneDrive\\\\Desktop\\\\\\u2800\\\\U-DASH\\\\U-DASH\\\\u-dash-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar enhancers_1 = require(\"./enhancers\");\n\nvar expand_aliases_1 = __importDefault(require(\"./expand-aliases\"));\n\nvar cache = __importStar(require(\"./cache\"));\n\nvar styles = __importStar(require(\"./styles\"));\n\nfunction enhanceProps(rawProps) {\n  var propsMap = expand_aliases_1.default(rawProps);\n  var preservedProps = {};\n  var className = rawProps.className || '';\n\n  var _iterator = _createForOfIteratorHelper(propsMap),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          propName = _step$value[0],\n          propValue = _step$value[1];\n\n      var cachedClassName = cache.get(propName, propValue);\n\n      if (cachedClassName) {\n        className = \"\".concat(className, \" \").concat(cachedClassName);\n        continue;\n      }\n\n      var enhancer = enhancers_1.propEnhancers[propName];\n\n      if (enhancer && (propValue === null || propValue === undefined || propValue === false)) {\n        continue;\n      } else if (!enhancer) {\n        preservedProps[propName] = propValue;\n        continue;\n      }\n\n      var newCss = enhancer(propValue);\n\n      if (newCss) {\n        styles.add(newCss.styles);\n        cache.set(propName, propValue, newCss.className);\n        className = \"\".concat(className, \" \").concat(newCss.className);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  className = className.trim();\n  return {\n    className: className,\n    enhancedProps: preservedProps\n  };\n}\n\nexports.default = enhanceProps;","map":null,"metadata":{},"sourceType":"script"}