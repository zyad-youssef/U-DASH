{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"color\", \"disabled\", \"dotSize\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { SymbolCircleIcon } from '../../icons';\nimport { majorScale } from '../../scales';\nimport { Text } from '../../typography';\nvar StatusIndicator = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function StatusIndicator(props, ref) {\n  var children = props.children,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'disabled' : _props$color,\n      disabled = props.disabled,\n      _props$dotSize = props.dotSize,\n      dotSize = _props$dotSize === void 0 ? 10 : _props$dotSize,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(SymbolCircleIcon, {\n    flexShrink: 0,\n    marginRight: majorScale(1),\n    size: dotSize,\n    color: color\n  }), children);\n}));\nStatusIndicator.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * The label of the status hint.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the status hint. Can be an intent or hex value.\n   */\n  color: PropTypes.string,\n\n  /**\n   * The size of the dot to the left of the text\n   */\n  dotSize: PropTypes.number\n});\nexport default StatusIndicator;","map":null,"metadata":{},"sourceType":"module"}