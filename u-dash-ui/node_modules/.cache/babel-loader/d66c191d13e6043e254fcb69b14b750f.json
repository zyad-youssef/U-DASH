{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { getTextColorForIntent, getPrimaryButtonStylesForIntent } from '../deprecated/helpers';\nimport { defaultControlStyles } from '../deprecated/shared';\nvar baseStyle = {\n  fontFamily: 'fontFamilies.ui',\n  borderRadius: 'radii.1',\n  fontWeight: 500,\n  border: '0',\n  color: function color(theme, _ref) {\n    var _color = _ref.color;\n    return theme.colors[_color] || _color || 'colors.default';\n  },\n  _disabled: _objectSpread({}, defaultControlStyles.disabled)\n};\nvar appearances = {\n  primary: {\n    backgroundColor: 'white',\n    backgroundImage: function backgroundImage(_, props) {\n      return getPrimaryButtonStylesForIntent(props.intent).linearGradient.base;\n    },\n    boxShadow: function boxShadow(theme) {\n      return \"inset 0 0 0 1px \".concat(theme.scales.neutral.N5A, \", inset 0 -1px 1px 0 \").concat(theme.scales.neutral.N2A);\n    },\n    color: 'white',\n    _focus: {\n      backgroundImage: function backgroundImage(_, props) {\n        return getPrimaryButtonStylesForIntent(props.intent).linearGradient.focus;\n      },\n      boxShadow: function boxShadow(theme, props) {\n        return \"0 0 0 3px \".concat(getPrimaryButtonStylesForIntent(props.intent).focusColor, \", inset 0 0 0 1px \").concat(theme.scales.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(theme.scales.neutral.N5A);\n      }\n    },\n    _hover: {\n      backgroundImage: function backgroundImage(_, props) {\n        return getPrimaryButtonStylesForIntent(props.intent).linearGradient.hover;\n      }\n    },\n    _active: {\n      backgroundImage: function backgroundImage(_, props) {\n        return getPrimaryButtonStylesForIntent(props.intent).linearGradient.active;\n      }\n    },\n    _focusAndActive: {}\n  },\n  \"default\": _objectSpread(_objectSpread({}, defaultControlStyles.base), {}, {\n    color: function color(_, props) {\n      return getTextColorForIntent(props.intent);\n    },\n    _hover: defaultControlStyles.hover,\n    _active: defaultControlStyles.active,\n    _focus: defaultControlStyles.focus,\n    _disabled: defaultControlStyles.disabled\n  }),\n  minimal: {\n    color: function color(theme, props) {\n      return getTextColorForIntent(props.intent, theme.colors.blue.base);\n    },\n    background: 'transparent',\n    _hover: {\n      background: 'scales.neutral.N2A'\n    },\n    _focus: {\n      boxShadow: function boxShadow(theme) {\n        return \"0 0 0 3px \".concat(theme.colors.blueAlpha.B5A);\n      }\n    },\n    _active: {\n      background: 'scales.blue.B3A'\n    }\n  }\n};\nvar sizes = {\n  small: {\n    height: 24,\n    minWidth: 24,\n    fontSize: 'fontSizes.1',\n    lineHeight: '24px',\n    paddingLeft: 12,\n    paddingRight: 12\n  },\n  medium: {\n    height: 32,\n    minWidth: 32,\n    fontSize: 'fontSizes.1',\n    lineHeight: '32px',\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n  large: {\n    height: 40,\n    minWidth: 40,\n    fontSize: 'fontSizes.2',\n    lineHeight: '40px',\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n};\nexport default {\n  baseStyle: baseStyle,\n  appearances: appearances,\n  sizes: sizes\n};","map":null,"metadata":{},"sourceType":"module"}