{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fill\"],\n    _excluded2 = [\"fill\"],\n    _excluded3 = [\"id\", \"name\", \"label\", \"appearance\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"indeterminate\"],\n    _excluded4 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { useMergedRef, useStyleConfig } from '../../hooks';\nimport { Text } from '../../typography';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar MinusIcon = function MinusIcon(_ref2) {\n  var _ref2$fill = _ref2.fill,\n      fill = _ref2$fill === void 0 ? 'currentColor' : _ref2$fill,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n  }));\n};\n\nMinusIcon.displayName = \"MinusIcon\";\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar noop = function noop() {};\n\nvar pseudoSelectors = {\n  _base: '& + div',\n  _disabled: '&[disabled] + div',\n  _hover: '&:not([disabled]):hover + div',\n  _focus: '&:not([disabled]):focus + div',\n  _active: '&:not([disabled]):active + div',\n  _checked: '&:checked + div, &[type=checkbox]:indeterminate + div',\n  _checkedHover: '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div',\n  _checkedActive: '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div',\n  _checkedDisabled: '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div'\n};\n\nvar internalStyles = _defineProperty({\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1px',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  WebkitFontSmoothing: 'antialiased',\n  textDecoration: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  width: '1px',\n  opacity: '0'\n}, pseudoSelectors._base, {\n  outline: 'none',\n  cursor: 'pointer'\n});\n\nvar Checkbox = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Checkbox(props, forwardedRef) {\n  var id = props.id,\n      name = props.name,\n      label = props.label,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      disabled = props.disabled,\n      isInvalid = props.isInvalid,\n      _props$checked = props.checked,\n      checked = _props$checked === void 0 ? false : _props$checked,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? noop : _props$onChange,\n      value = props.value,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      rest = _objectWithoutProperties(props, _excluded3);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  var callbackRef = useMergedRef(setRef, forwardedRef);\n  useEffect(function () {\n    if (ref) {\n      ref.indeterminate = indeterminate;\n    }\n  }, [ref, indeterminate]);\n\n  var _useStyleConfig = useStyleConfig('Checkbox', {\n    appearance: appearance\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded4);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"label\",\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    position: \"relative\",\n    display: \"flex\",\n    marginY: 16\n  }, rest), /*#__PURE__*/React.createElement(Box, _extends({\n    className: themedClassName,\n    is: \"input\",\n    id: id,\n    type: \"checkbox\",\n    name: name,\n    value: value,\n    checked: checked || indeterminate,\n    onChange: onChange,\n    disabled: disabled,\n    \"aria-invalid\": isInvalid\n  }, boxProps, {\n    ref: callbackRef\n  })), /*#__PURE__*/React.createElement(Box, {\n    boxSizing: \"border-box\",\n    borderRadius: 3,\n    display: \"flex\",\n    flex: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 16,\n    height: 16\n  }, indeterminate ? /*#__PURE__*/React.createElement(MinusIcon, null) : /*#__PURE__*/React.createElement(CheckIcon, null)), label && /*#__PURE__*/React.createElement(Text, {\n    marginLeft: 8,\n    size: 300,\n    color: disabled ? 'muted' : 'default'\n  }, label));\n}));\nCheckbox.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, spacing.propTypes), position.propTypes), layout.propTypes), dimensions.propTypes), {}, {\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the checkbox.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the checkbox.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the checkbox displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the checkbox is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n});\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}