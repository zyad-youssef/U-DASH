{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"aria-describedby\", \"autoFocus\", \"children\", \"defaultValue\", \"disabled\", \"height\", \"id\", \"isInvalid\", \"name\", \"onChange\", \"required\", \"value\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nimport { CaretDownIcon } from '../../icons';\nimport { getTextPropsForControlHeight } from '../../lib/deprecated-theme-helpers';\nvar internalStyles = {\n  textTransform: 'default',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  border: 'none',\n  flex: 1,\n  background: 'none',\n  width: '100%',\n  WebkitFontSmoothing: 'antialiased',\n  textDecoration: 'none',\n  outline: 'none',\n  cursor: 'pointer',\n  ':-moz-focusring': {\n    color: 'transparent',\n    textShadow: '0 0 0 #000'\n  }\n};\nvar pseudoSelectors = {\n  _disabled: '[disabled]',\n  _invalid: '&[aria-invalid=\"true\"]',\n  _hover: '&:not([disabled]):hover',\n  _focus: '&:not([disabled]):focus',\n  _active: '&:not([disabled]):active'\n};\n\nvar getIconSizeForSelect = function getIconSizeForSelect(height) {\n  if (height <= 28) return 12;\n  if (height <= 32) return 14; // Slightly bigger than getIconSizeForButton\n\n  if (height <= 40) return 16;\n  if (height <= 48) return 18;\n  return 20;\n};\n\nvar Select = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Select(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      ariaDescribedby = props['aria-describedby'],\n      autoFocus = props.autoFocus,\n      children = props.children,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      heightProp = props.height,\n      id = props.id,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      name = props.name,\n      onChange = props.onChange,\n      required = props.required,\n      value = props.value,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Select', {\n    appearance: appearance,\n    size: restProps.size || 'medium'\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var height = heightProp || boxProps.height;\n  var textProps = !restProps.size && restProps.height ? getTextPropsForControlHeight(restProps.height) : {};\n  var iconSize = getIconSizeForSelect(height);\n  var iconMargin = height >= 36 ? 12 : 8;\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    display: \"inline-flex\",\n    flex: 1,\n    position: \"relative\",\n    width: \"auto\",\n    height: height\n  }, restProps, textProps), /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"select\",\n    ref: ref,\n    className: themedClassName,\n    id: id,\n    name: name,\n    onChange: onChange,\n    defaultValue: defaultValue,\n    value: value,\n    required: required,\n    autoFocus: autoFocus,\n    disabled: disabled,\n    \"aria-invalid\": String(isInvalid),\n    paddingLeft: Math.round(height / 3.2),\n    paddingRight: iconMargin * 2 + iconSize\n  }, boxProps, {\n    height: \"100%\",\n    \"aria-describedby\": ariaDescribedby\n  }), children), /*#__PURE__*/React.createElement(CaretDownIcon, {\n    color: \"default\",\n    size: iconSize,\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: -iconSize / 2,\n    right: iconMargin,\n    pointerEvents: \"none\"\n  }));\n}));\nSelect.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, dimensions.propTypes), spacing.propTypes), position.propTypes), layout.propTypes), {}, {\n  /**\n   * The id attribute for the select.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute for the select.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The options that are passed to the select.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The initial value of an uncontrolled select\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Function called when value changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the select.\n   */\n  value: PropTypes.any,\n\n  /**\n   * When true, the select is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, the select should auto focus.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When true, the select is invalid.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the select. The default theme only supports default.\n   */\n  appearance: PropTypes.string\n});\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}