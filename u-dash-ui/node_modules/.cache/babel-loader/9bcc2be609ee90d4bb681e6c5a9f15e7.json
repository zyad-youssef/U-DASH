{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"direction\", \"disabled\", \"is\", \"isSelected\", \"onKeyDown\", \"onSelect\", \"height\", \"className\", \"tabIndex\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useClickable, useLatest, useStyleConfig } from '../../hooks';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\nimport { Text } from '../../typography';\n\nvar noop = function noop() {};\n\nvar getInternalStyles = function getInternalStyles(direction) {\n  return {\n    alignItems: 'center',\n    justifyContent: direction === 'horizontal' ? 'center' : 'flex-start',\n    textDecoration: 'none',\n    cursor: 'pointer',\n    outline: 'none',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    '&::-moz-focus-inner ': {\n      border: 0\n    },\n    display: direction === 'horizontal' ? 'inline-flex' : 'flex',\n    width: direction === 'horizontal' ? 'auto' : '100%'\n  };\n};\n\nvar pseudoSelectors = {\n  _active: '&:active',\n  _after: '&:after',\n  _before: '&:before',\n  _current: '&[aria-current=\"page\"], &[aria-selected=\"true\"]',\n  _disabled: '&[aria-disabled=\"true\"]',\n  _focus: '&:focus',\n  _hover: '&:hover'\n};\nvar Tab = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Tab(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'secondary' : _props$appearance,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$is = props.is,\n      is = _props$is === void 0 ? 'span' : _props$is,\n      isSelected = props.isSelected,\n      _props$onKeyDown = props.onKeyDown,\n      onKeyDown = _props$onKeyDown === void 0 ? noop : _props$onKeyDown,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 28 : _props$height,\n      className = props.className,\n      tabIndex = props.tabIndex,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Tab', {\n    appearance: appearance,\n    direction: direction\n  }, pseudoSelectors, getInternalStyles(direction)),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var onClickRef = useLatest(props.onClick);\n  var handleClick = useCallback(function (event) {\n    safeInvoke(onClickRef.current, event);\n\n    if (!disabled) {\n      onSelect();\n    }\n  }, // onClickRef is a ref, but eslint can't figure that out\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [disabled, onSelect]);\n  var clickableProps = useClickable({\n    disabled: disabled,\n    onKeyDown: onKeyDown,\n    tabIndex: tabIndex\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(typeof props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');\n  }\n\n  var elementBasedProps;\n\n  if (disabled) {\n    elementBasedProps = {\n      'aria-disabled': true\n    };\n  }\n\n  if (is === 'a') {\n    // Use aria-current when it's a link\n    // https://tink.uk/using-the-aria-current-attribute/\n    elementBasedProps = isSelected ? _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-current': 'page'\n    }) : {};\n  } else {\n    // Use a role=\"tablist\" around the tabs\n    // Also pass down a aria-controls=\"panelId\"\n    // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n    elementBasedProps = _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-selected': isSelected,\n      role: 'tab'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    className: cx(className, themedClassName),\n    is: is,\n    size: 300,\n    height: height,\n    ref: ref,\n    tabIndex: 0\n  }, boxProps, rest, {\n    onClick: handleClick\n  }, clickableProps, elementBasedProps));\n}));\nTab.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme has primary, and secondary. The default is secondary\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * The directionality of the tab.\n   * If the tab is apart of a vertical or horizontal list\n   */\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n});\nexport default Tab;","map":null,"metadata":{},"sourceType":"module"}