{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"size\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {\n  _child: '& > *',\n  _firstChild: '& > :first-child:not(:last-child)',\n  _middleChild: '& > :not(:first-child):not(:last-child)',\n  _lastChild: '& > :last-child:not(:first-child)'\n};\nvar internalStyles = {\n  display: 'inline-flex'\n};\n/**\n * Accessible `Group` component to identify a set of inputs/elements. Implements the WAI-ARIA Group Role\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#group}\n */\n\nvar Group = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Group(props, ref) {\n  var children = props.children,\n      className = props.className,\n      size = props.size,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Group', {\n    size: size\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var enhancedChildren = React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return child;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // Prefer more granularly defined props if present\n      size: child.props.size || size\n    });\n  });\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    className: cx(className, themedClassName),\n    role: \"group\",\n    ref: ref\n  }, styleProps, restProps), enhancedChildren);\n}));\nGroup.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The size passed down to children (for consistency)\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nexport default Group;","map":null,"metadata":{},"sourceType":"module"}