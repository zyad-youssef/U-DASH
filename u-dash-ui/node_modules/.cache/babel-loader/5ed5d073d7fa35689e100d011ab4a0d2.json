{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"hint\", \"label\", \"labelFor\", \"children\", \"isRequired\", \"labelProps\", \"description\", \"validationMessage\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport FormFieldDescription from './FormFieldDescription';\nimport FormFieldHint from './FormFieldHint';\nimport FormFieldLabel from './FormFieldLabel';\nimport FormFieldValidationMessage from './FormFieldValidationMessage';\nvar FormField = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FormField(props, ref) {\n  var hint = props.hint,\n      label = props.label,\n      labelFor = props.labelFor,\n      children = props.children,\n      isRequired = props.isRequired,\n      _props$labelProps = props.labelProps,\n      labelProps = _props$labelProps === void 0 ? {\n    size: 400\n  } : _props$labelProps,\n      description = props.description,\n      validationMessage = props.validationMessage,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 8\n  }, /*#__PURE__*/React.createElement(FormFieldLabel, _extends({\n    htmlFor: labelFor,\n    isAstrixShown: isRequired\n  }, labelProps), label), typeof description === 'string' ? /*#__PURE__*/React.createElement(FormFieldDescription, {\n    id: labelFor + '__description'\n  }, description) : description), children, typeof validationMessage === 'string' ? /*#__PURE__*/React.createElement(FormFieldValidationMessage, {\n    marginTop: 8,\n    id: labelFor + '__validation-message'\n  }, validationMessage) : validationMessage, typeof hint === 'string' ? /*#__PURE__*/React.createElement(FormFieldHint, {\n    marginTop: 6,\n    id: labelFor + '__hint'\n  }, hint) : hint);\n}));\nFormField.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Passed on the label as a htmlFor prop.\n   */\n  labelFor: PropTypes.string,\n\n  /**\n   * Whether or not show an asterix after the label.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * An optional description of the field under the label, above the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * An optional hint under the input element.\n   */\n  hint: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the hint. This is unaffected by `isInvalid`.\n   */\n  validationMessage: PropTypes.node\n}, dimensions.propTypes), spacing.propTypes), position.propTypes), layout.propTypes);\nexport default FormField;","map":null,"metadata":{},"sourceType":"module"}