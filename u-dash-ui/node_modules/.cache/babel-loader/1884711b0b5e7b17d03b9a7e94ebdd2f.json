{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isNumber\", \"placeholder\", \"textProps\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport TableCell from './TableCell';\nvar ellipsis = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n};\nvar TextTableCell = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TextTableCell(props, ref) {\n  var children = props.children,\n      _props$isNumber = props.isNumber,\n      isNumber = _props$isNumber === void 0 ? false : _props$isNumber,\n      placeholder = props.placeholder,\n      textProps = props.textProps,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(TableCell, _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(Text, _extends({\n    size: 300,\n    flex: \"1\",\n    title: typeof children === 'string' ? children : undefined\n  }, ellipsis, isNumber ? {\n    fontFamily: 'mono'\n  } : {}, textProps), children));\n}));\nTextTableCell.propTypes = _objectSpread(_objectSpread({}, TableCell.propTypes), {}, {\n  /**\n   * Adds fontFamily: mono.\n   */\n  isNumber: PropTypes.bool,\n\n  /**\n   * Pass additional props to the Text component.\n   */\n  textProps: PropTypes.object\n});\nexport default TextTableCell;","map":null,"metadata":{},"sourceType":"module"}