{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isAstrixShown\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../../typography';\nvar FormFieldLabel = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function FormFieldLabel(props, ref) {\n  var children = props.children,\n      isAstrixShown = props.isAstrixShown,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    display: \"block\",\n    marginBottom: 0\n  }, rest, {\n    ref: ref\n  }), children, isAstrixShown && /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(\"span\", {\n    title: \"This field is required.\"\n  }, \"*\")));\n}));\nFormFieldLabel.propTypes = _objectSpread(_objectSpread({}, Label.propTypes), {}, {\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  isAstrixShown: PropTypes.bool\n});\nexport default FormFieldLabel;","map":null,"metadata":{},"sourceType":"module"}