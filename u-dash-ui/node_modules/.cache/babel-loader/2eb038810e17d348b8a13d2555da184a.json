{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"disabled\", \"height\", \"isHighlighted\", \"isSelectable\", \"isSelected\", \"item\", \"onDeselect\", \"onSelect\", \"style\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStyleConfig } from '../../hooks';\nimport { Pane } from '../../layers';\nimport TableRow from '../../table/src/TableRow';\nimport TextTableCell from '../../table/src/TextTableCell';\nexport var pseudoSelectors = {\n  _active: '&[aria-current=\"true\"]:active, &[data-isselectable=\"true\"]:active',\n  _before: '&:before',\n  _disabled: '&[disabled]',\n  _focus: ':focus',\n  _hover: ':hover',\n  _isSelectable: '&[data-isselectable=\"true\"]',\n  _selected: '&[aria-current=\"true\"]'\n};\nvar internalStyles = {\n  alignItems: 'center',\n  display: 'flex'\n};\nvar emptyObject = {};\nvar Option = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Option(props, ref) {\n  var children = props.children,\n      disabled = props.disabled,\n      height = props.height,\n      isHighlighted = props.isHighlighted,\n      isSelectable = props.isSelectable,\n      isSelected = props.isSelected,\n      item = props.item,\n      onDeselect = props.onDeselect,\n      onSelect = props.onSelect,\n      style = props.style,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Option', emptyObject, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(TableRow, _extends({\n    className: themedClassName,\n    isSelectable: isSelectable && !disabled,\n    isHighlighted: isHighlighted,\n    onSelect: onSelect,\n    onDeselect: onDeselect,\n    isSelected: isSelected,\n    style: style\n  }, boxProps, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(TextTableCell, {\n    borderRight: null,\n    flex: 1,\n    alignSelf: \"stretch\",\n    height: height,\n    cursor: disabled ? 'default' : 'pointer'\n  }, /*#__PURE__*/React.createElement(Pane, {\n    alignItems: \"center\",\n    display: \"flex\"\n  }, children)));\n}));\nOption.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  disabled: PropTypes.bool,\n  height: PropTypes.number,\n  isHighlighted: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  item: PropTypes.any,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  style: PropTypes.any\n};\nexport default Option;","map":null,"metadata":{},"sourceType":"module"}