{"ast":null,"code":"import React, { useContext, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { StackingOrder } from '../../constants';\nimport StackingContext from './StackingContext';\nvar Stack = /*#__PURE__*/memo(function Stack(_ref) {\n  var children = _ref.children,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? StackingOrder.STACKING_CONTEXT : _ref$value;\n  var previousValue = useContext(StackingContext);\n  var currentValue = Math.max(value, previousValue);\n  var nextValue = currentValue + 1;\n  return /*#__PURE__*/React.createElement(StackingContext.Provider, {\n    value: nextValue\n  }, children(currentValue));\n});\nStack.propTypes = {\n  /**\n   * Function that takes the current z-index and returns a React Node.\n   * (zIndex) => ReactNode.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Set the value of the stack. This will increment for children.\n   */\n  value: PropTypes.number\n};\nexport default Stack;","map":null,"metadata":{},"sourceType":"module"}