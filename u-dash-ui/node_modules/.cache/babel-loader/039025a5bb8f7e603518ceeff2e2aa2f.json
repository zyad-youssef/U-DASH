{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\zyadi\\\\OneDrive\\\\Desktop\\\\\\u2800\\\\U-DASH\\\\U-DASH\\\\u-dash-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\zyadi\\\\OneDrive\\\\Desktop\\\\\\u2800\\\\U-DASH\\\\U-DASH\\\\u-dash-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\zyadi\\\\OneDrive\\\\Desktop\\\\\\u2800\\\\U-DASH\\\\U-DASH\\\\u-dash-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isBrowser = typeof window !== 'undefined';\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    return tag.sheet;\n  }\n\n  for (var i = 0; i < document.styleSheets.length; i += 1) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      return document.styleSheets[i];\n    }\n  }\n\n  return;\n}\n\nfunction makeStyleTag() {\n  var tag = document.createElement('style');\n  tag.type = 'text/css';\n  tag.setAttribute('data-ui-box', '');\n  tag.append(document.createTextNode(''));\n  (document.head || document.querySelector('head')).append(tag);\n  return tag;\n}\n\nvar CustomStyleSheet = /*#__PURE__*/function () {\n  function CustomStyleSheet() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CustomStyleSheet);\n\n    this.tags = [];\n    this.ctr = 0;\n    this.injected = false;\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.maxLength = options.maxLength || 65000;\n  }\n\n  _createClass(CustomStyleSheet, [{\n    key: \"getSheet\",\n    value: function getSheet() {\n      return sheetForTag(last(this.tags));\n    }\n  }, {\n    key: \"inject\",\n    value: function inject() {\n      var _this = this;\n\n      if (this.injected) {\n        throw new Error('StyleSheet has already been injected.');\n      }\n\n      if (isBrowser) {\n        this.tags[0] = makeStyleTag();\n      } else {\n        this.sheet = {\n          cssRules: [],\n          insertRule: function insertRule(rule) {\n            _this.sheet.cssRules.push({\n              cssText: rule\n            });\n          }\n        };\n      }\n\n      this.injected = true;\n    }\n  }, {\n    key: \"speedy\",\n    value: function speedy(bool) {\n      if (this.ctr !== 0) {\n        throw new Error(\"StyleSheet cannot change speedy mode after inserting any rule to sheet. Either call speedy(\".concat(bool, \") earlier in your app, or call flush() before speedy(\").concat(bool, \")\"));\n      }\n\n      this.isSpeedy = Boolean(bool);\n    }\n  }, {\n    key: \"_insert\",\n    value: function _insert(sheet, rule) {\n      sheet.insertRule(rule, sheet.cssRules.length);\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(rule) {\n      if (isBrowser) {\n        var sheet = this.getSheet();\n\n        if (this.isSpeedy && sheet && sheet.insertRule) {\n          this._insert(sheet, rule);\n        } else {\n          last(this.tags).append(document.createTextNode(rule));\n        }\n      } else if (this.sheet) {\n        this.sheet.insertRule(rule, this.sheet.cssRules.length);\n      }\n\n      this.ctr += 1;\n\n      if (isBrowser && this.ctr % this.maxLength === 0) {\n        this.tags.push(makeStyleTag());\n      }\n\n      return this.ctr - 1;\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      if (isBrowser) {\n        this.tags.forEach(function (tag) {\n          return tag.parentNode.removeChild(tag);\n        });\n        this.tags = [];\n        this.sheet = null;\n        this.ctr = 0;\n      } else if (this.sheet) {\n        this.sheet.cssRules = [];\n      }\n\n      this.injected = false;\n    }\n  }, {\n    key: \"rules\",\n    value: function rules() {\n      if (!isBrowser) {\n        return this.sheet ? this.sheet.cssRules : [];\n      }\n\n      var arr = [];\n      this.tags.forEach(function (tag) {\n        var sheet = sheetForTag(tag);\n\n        if (sheet) {\n          var rules = Array.from(sheet.cssRules);\n          arr.splice.apply(arr, [arr.length, 0].concat(_toConsumableArray(rules)));\n        }\n      });\n      return arr;\n    }\n  }]);\n\n  return CustomStyleSheet;\n}();\n\nexports.default = CustomStyleSheet;","map":null,"metadata":{},"sourceType":"script"}