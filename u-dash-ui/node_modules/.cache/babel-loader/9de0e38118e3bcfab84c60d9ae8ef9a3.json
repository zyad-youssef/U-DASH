{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar baseStyle = {\n  fontFamily: function fontFamily(theme, _ref) {\n    var _ref$fontFamily = _ref.fontFamily,\n        _fontFamily = _ref$fontFamily === void 0 ? 'ui' : _ref$fontFamily;\n\n    return theme.fontFamilies[_fontFamily] ? \"fontFamilies.\".concat(_fontFamily) : _fontFamily;\n  },\n  color: function color(theme, _ref2) {\n    var _ref2$color = _ref2.color,\n        _color = _ref2$color === void 0 ? 'default' : _ref2$color;\n\n    return theme.colors[_color] ? \"colors.\".concat(_color) : _color;\n  },\n  marginTop: 0,\n  marginBottom: 0\n};\nvar appearances = {};\nvar paragraphSizes = {\n  300: {\n    fontSize: 'fontSizes.1',\n    fontWeight: 'fontWeights.normal',\n    lineHeight: 'lineHeights.1',\n    letterSpacing: 'letterSpacings.normal'\n  },\n  400: {\n    fontSize: 'fontSizes.2',\n    fontWeight: 'fontWeights.normal',\n    lineHeight: 'lineHeights.3',\n    letterSpacing: 'letterSpacings.tight'\n  },\n  500: {\n    fontSize: 'fontSizes.3',\n    fontWeight: 'fontWeights.normal',\n    lineHeight: 'lineHeights.3',\n    letterSpacing: 'letterSpacings.tight'\n  },\n  600: {\n    fontSize: 'fontSizes.4',\n    fontWeight: 'fontWeights.normal',\n    lineHeight: 'lineHeights.4',\n    letterSpacing: 'letterSpacings.tighter'\n  }\n};\n\nvar sizes = _objectSpread(_objectSpread({}, paragraphSizes), {}, {\n  small: paragraphSizes['300'],\n  medium: paragraphSizes['400'],\n  large: paragraphSizes['500']\n});\n\nexport default {\n  baseStyle: baseStyle,\n  appearances: appearances,\n  sizes: sizes\n};","map":null,"metadata":{},"sourceType":"module"}