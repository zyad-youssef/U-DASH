{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar colorTokens = {\n  // Grays / neutrals\n  gray900: '#101840',\n  gray800: '#474d66',\n  gray700: '#696f8c',\n  gray600: '#8f95b2',\n  gray500: '#c1c4d6',\n  gray400: '#d8dae5',\n  gray300: '#E6E8F0',\n  gray200: '#edeff5',\n  gray100: '#F4F5F9',\n  gray90: '#F4F6FA',\n  gray75: '#F9FAFC',\n  gray50: '#FAFBFF',\n  // Blues\n  blue900: '#0A1433',\n  blue800: '#142966',\n  blue700: '#1F3D99',\n  blue600: '#2952CC',\n  blue500: '#3366FF',\n  blue400: '#5C85FF',\n  blue300: '#85A3FF',\n  blue200: '#ADC2FF',\n  blue100: '#D6E0FF',\n  blue50: '#EBF0FF',\n  blue25: '#F3F6FF',\n  // Reds\n  red700: '#7D2828',\n  red600: '#A73636',\n  red500: '#D14343',\n  red100: '#F9DADA',\n  red25: '#FDF4F4',\n  // Greens\n  green900: '#10261E',\n  green800: '#214C3C',\n  green700: '#317159',\n  green600: '#429777',\n  green500: '#52BD95',\n  green400: '#75CAAA',\n  green300: '#97D7BF',\n  green200: '#BAE5D5',\n  green100: '#DCF2EA',\n  green25: '#F5FBF8',\n  // Oranges\n  orange700: '#996A13',\n  orange500: '#FFB020',\n  orange100: '#F8E3DA',\n  orange25: '#FFFAF2',\n  // Purple\n  purple600: '#6E62B6',\n  purple100: '#E7E4F9',\n  // Teals\n  teal800: '#0F5156',\n  teal100: '#D3F5F7',\n  // Yellows\n  yellow800: '#66460D',\n  yellow100: '#FFEFD2'\n};\n\nvar colors = _objectSpread(_objectSpread({}, colorTokens), {}, {\n  muted: colorTokens.gray700,\n  \"default\": colorTokens.gray800\n});\n\nvar fontFamilies = {\n  /**\n   * @property {string} display - Used for headings larger than 20px.\n   */\n  display: '\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n\n  /**\n   * @property {string} ui - Used for text and UI (which includes almost anything).\n   */\n  ui: '\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n\n  /**\n   * @property {string} mono - Used for code and sometimes numbers in tables.\n   */\n  mono: '\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace'\n};\nvar text = {\n  /**\n   * It's useful to have 600 because `Link` uses the `Text` component.\n   * A `Link` could be used as 600 in the context of a breadcrumb.\n   */\n  600: {\n    fontSize: '20px',\n    fontWeight: 400,\n    lineHeight: '24px',\n    letterSpacing: '-0.07px'\n  },\n  500: {\n    fontSize: '16px',\n    fontWeight: 400,\n    lineHeight: '20px',\n    letterSpacing: '-0.05px'\n  },\n  400: {\n    // Default\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '20px',\n    letterSpacing: '-0.05px'\n  },\n  300: {\n    fontSize: '12px',\n    fontWeight: 400,\n    lineHeight: '16px',\n    letterSpacing: '0'\n  }\n};\nvar paragraph = {\n  500: _objectSpread(_objectSpread({}, text['500']), {}, {\n    lineHeight: '24px'\n  }),\n  400: _objectSpread(_objectSpread({}, text['400']), {}, {\n    lineHeight: '21px'\n  }),\n  300: _objectSpread(_objectSpread({}, text['300']), {}, {\n    lineHeight: '18px'\n  })\n};\nvar fills = {\n  neutral: {\n    color: colors.gray800,\n    backgroundColor: colors.gray200\n  },\n  blue: {\n    color: colors.blue600,\n    backgroundColor: colors.blue100\n  },\n  red: {\n    color: colors.red700,\n    backgroundColor: colors.red100\n  },\n  orange: {\n    color: colors.orange700,\n    backgroundColor: colors.orange100\n  },\n  yellow: {\n    color: colors.yellow800,\n    backgroundColor: colors.yellow100\n  },\n  green: {\n    color: colors.green700,\n    backgroundColor: colors.green100\n  },\n  teal: {\n    color: colors.teal800,\n    backgroundColor: colors.teal100\n  },\n  purple: {\n    color: colors.purple600,\n    backgroundColor: colors.purple100\n  }\n}; // Lifted from foundational scales\n\nvar overlayBackgroundColor = 'rgba(67, 90, 111, 0.7)';\nvar codeBackgroundColor = 'rgba(16, 112, 202, 0.06)';\nvar codeBorderColor = 'rgba(16, 112, 202, 0.14)';\nexport default {\n  colors: colors,\n  fontFamilies: fontFamilies,\n  text: text,\n  paragraph: paragraph,\n  overlayBackgroundColor: overlayBackgroundColor,\n  codeBackgroundColor: codeBackgroundColor,\n  codeBorderColor: codeBorderColor,\n  fills: fills,\n  selectedOptionColor: colors.blue500,\n  // Border radius used across input components\n  borderRadius: 4,\n  primary: {\n    base: colors.blue500,\n    hover: colors.blue600,\n    active: colors.blue700,\n    disabled: colors.blue100\n  },\n  intents: {\n    info: {\n      background: colors.blue25,\n      border: colors.blue500,\n      text: colors.blue600,\n      icon: colors.blue500\n    },\n    success: {\n      background: colors.green25,\n      border: colors.green500,\n      text: colors.green700,\n      icon: colors.green500\n    },\n    warning: {\n      background: colors.orange25,\n      border: colors.orange500,\n      text: colors.orange700,\n      icon: colors.orange500\n    },\n    danger: {\n      background: colors.red25,\n      border: colors.red500,\n      text: colors.red600,\n      icon: colors.red500\n    }\n  },\n  states: {\n    \"default\": {\n      icon: colors.gray800\n    },\n    muted: {\n      icon: colors.gray700\n    },\n    dark: {\n      icon: colors.gray900\n    },\n    disabled: {\n      icon: colors.gray500\n    },\n    selected: {\n      icon: colors.blue500\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}