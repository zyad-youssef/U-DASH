{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"disabled\", \"height\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box, { splitBoxProps } from 'ui-box';\nimport { StackingOrder } from '../../constants';\nimport { SearchIcon } from '../../icons';\nimport { TextInput } from '../../text-input';\n\nvar getIconSizeForInput = function getIconSizeForInput(height) {\n  if (height <= 28) return 12;\n  if (height <= 32) return 14;\n  if (height <= 40) return 16;\n  if (height <= 48) return 18;\n  return 20;\n};\n\nvar SearchInput = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function SearchInput(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      disabled = props.disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _splitBoxProps = splitBoxProps(restProps),\n      matchedProps = _splitBoxProps.matchedProps,\n      remainingProps = _splitBoxProps.remainingProps;\n\n  var width = matchedProps.width;\n  var iconSize = getIconSizeForInput(height);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    position: \"relative\",\n    display: \"inline-flex\",\n    height: height\n  }, matchedProps), /*#__PURE__*/React.createElement(Box, {\n    height: height,\n    width: height,\n    pointerEvents: \"none\",\n    position: \"absolute\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    color: \"default\",\n    zIndex: StackingOrder.FOCUSED + 1,\n    size: iconSize\n  })), /*#__PURE__*/React.createElement(TextInput, _extends({\n    ref: ref,\n    height: height,\n    paddingLeft: height,\n    appearance: appearance,\n    disabled: disabled,\n    width: width,\n    type: \"search\"\n  }, remainingProps)));\n}));\nSearchInput.propTypes = _objectSpread({}, TextInput.propTypes);\nexport default SearchInput;","map":null,"metadata":{},"sourceType":"module"}